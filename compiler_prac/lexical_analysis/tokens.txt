	[kw #include]	[op <]	[id iostream]	[op >]	[kw #include]	[op <]	[id vector]	[op >]	[kw #include]	[op <]	[kw string]	[op >]	[kw #include]	[op <]	[id iomanip]	[op >]	[kw #include]	[op <]	[id cstdlib]	[op >]	[kw #include]	[op <]	[unkwn ext/pb_ds/assoc_container.hpp]	[op >]	[kw #include]	[op <]	[unkwn ext/pb_ds/tree_policy.hpp]	[op >]	[id using]	[id namespace]	[id __gnu_pbds]	[sep ;]	[kw void]	[id clearConsole]	[par (]	[par )]	[par {]	[unkwn #ifdef]	[id _WIN32]	[id system]	[par (]	[sep "]	[id cls]	[sep "]	[par )]	[sep ;]	[unkwn #else]	[id system]	[par (]	[sep "]	[id clear]	[sep "]	[par )]	[sep ;]	[unkwn #endif]	[par }]	[kw class]	[id BankAccount]	[par {]	[id private]	[op :]	[kw int]	[id accountNumber]	[sep ;]	[kw std]	[op ::]	[kw string]	[id accountHolderName]	[sep ;]	[kw double]	[id balance]	[sep ;]	[kw std]	[op ::]	[kw string]	[id accountType]	[sep ;]	[id public]	[op :]	[id BankAccount]	[par (]	[kw int]	[id accNo]	[sep ,]	[id const]	[kw std]	[op ::]	[kw string]	[op &]	[id name]	[sep ,]	[kw double]	[id initialBalance]	[sep ,]	[id const]	[kw std]	[op ::]	[kw string]	[op &]	[id type]	[par )]	[op :]	[id accountNumber]	[par (]	[id accNo]	[par )]	[sep ,]	[id accountHolderName]	[par (]	[id name]	[par )]	[sep ,]	[id balance]	[par (]	[id initialBalance]	[par )]	[sep ,]	[id accountType]	[par (]	[id type]	[par )]	[par {]	[par }]	[kw void]	[id deposit]	[par (]	[kw double]	[id amount]	[par )]	[par {]	[kw if]	[par (]	[id amount]	[op <=]	[num 0]	[par )]	[par {]	[kw std]	[op ::]	[id cerr]	[op <<]	[sep "]	[id Error]	[op :]	[id Deposit]	[id amount]	[id must]	[id be]	[unkwn positive.\n]	[sep "]	[sep ;]	[kw return]	[sep ;]	[par }]	[id balance]	[op +=]	[id amount]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Deposited]	[op :]	[sep "]	[op <<]	[id amount]	[op <<]	[sep "]	[unkwn \n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Updated]	[id Balance]	[op :]	[sep "]	[op <<]	[id balance]	[op <<]	[sep "]	[unkwn \n]	[sep "]	[sep ;]	[par }]	[kw void]	[id withdraw]	[par (]	[kw double]	[id amount]	[par )]	[par {]	[kw if]	[par (]	[id amount]	[op >]	[id balance]	[par )]	[par {]	[kw std]	[op ::]	[id cerr]	[op <<]	[sep "]	[id Error]	[op :]	[id Insufficient]	[unkwn balance.\n]	[sep "]	[sep ;]	[kw return]	[sep ;]	[par }]	[id balance]	[op -=]	[id amount]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Withdrew]	[op :]	[sep "]	[op <<]	[id amount]	[op <<]	[sep "]	[unkwn \n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Remaining]	[id Balance]	[op :]	[sep "]	[op <<]	[id balance]	[op <<]	[sep "]	[unkwn \n]	[sep "]	[sep ;]	[par }]	[kw void]	[id displayAccountDetails]	[par (]	[par )]	[id const]	[par {]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[unkwn \n]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[unkwn \n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Account]	[id Number]	[op :]	[sep "]	[op <<]	[id accountNumber]	[op <<]	[sep "]	[unkwn \n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Account]	[id Holder]	[op :]	[sep "]	[op <<]	[id accountHolderName]	[op <<]	[sep "]	[unkwn \n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Account]	[id Type]	[op :]	[sep "]	[op <<]	[id accountType]	[op <<]	[sep "]	[unkwn \n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Balance]	[op :]	[sep "]	[op <<]	[kw std]	[op ::]	[id fixed]	[op <<]	[kw std]	[op ::]	[id setprecision]	[par (]	[num 2]	[par )]	[op <<]	[id balance]	[op <<]	[sep "]	[unkwn \n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[unkwn \n]	[sep "]	[sep ;]	[par }]	[kw int]	[id getAccountNumber]	[par (]	[par )]	[id const]	[par {]	[kw return]	[id accountNumber]	[sep ;]	[par }]	[kw std]	[op ::]	[kw string]	[id getAccountHolderName]	[par (]	[par )]	[id const]	[par {]	[kw return]	[id accountHolderName]	[sep ;]	[par }]	[par }]	[sep ;]	[kw void]	[id displayMenu]	[par (]	[par )]	[par {]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[unkwn \n]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op =]	[unkwn \n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Bank]	[id Management]	[id System]	[unkwn \n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op =]	[unkwn \n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[unkwn 1.]	[id Create]	[id New]	[unkwn Account\n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[unkwn 2.]	[id Deposit]	[unkwn Money\n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[unkwn 3.]	[id Withdraw]	[unkwn Money\n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[unkwn 4.]	[id Display]	[id Account]	[unkwn Details\n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[unkwn 5.]	[id List]	[id All]	[unkwn Accounts\n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[unkwn 6.]	[unkwn Exit\n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op =]	[unkwn \n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Enter]	[id your]	[id choice]	[op :]	[sep "]	[sep ;]	[par }]	[id BankAccount]	[op *]	[id findAccount]	[par (]	[kw std]	[op ::]	[id vector]	[op <]	[id BankAccount]	[op >]	[op &]	[id accounts]	[sep ,]	[kw int]	[id accountNumber]	[par )]	[par {]	[id for]	[par (]	[id auto]	[op &]	[id account]	[op :]	[id accounts]	[par )]	[par {]	[kw if]	[par (]	[unkwn account.getAccountNumber]	[par (]	[par )]	[op ==]	[id accountNumber]	[par )]	[par {]	[kw return]	[op &]	[id account]	[sep ;]	[par }]	[par }]	[kw return]	[id nullptr]	[sep ;]	[par }]	[kw void]	[id listAllAccounts]	[par (]	[id const]	[kw std]	[op ::]	[id vector]	[op <]	[id BankAccount]	[op >]	[op &]	[id accounts]	[par )]	[par {]	[kw if]	[par (]	[unkwn accounts.empty]	[par (]	[par )]	[par )]	[par {]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id No]	[id accounts]	[unkwn available.\n]	[sep "]	[sep ;]	[kw return]	[sep ;]	[par }]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[unkwn \nAll]	[id Bank]	[id Accounts]	[op :]	[unkwn \n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[op ==]	[unkwn \n]	[sep "]	[sep ;]	[id for]	[par (]	[id const]	[id auto]	[op &]	[id account]	[op :]	[id accounts]	[par )]	[par {]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Account]	[id Number]	[op :]	[sep "]	[op <<]	[unkwn account.getAccountNumber]	[par (]	[par )]	[op <<]	[sep "]	[unkwn \n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Account]	[id Holder]	[op :]	[sep "]	[op <<]	[unkwn account.getAccountHolderName]	[par (]	[par )]	[op <<]	[sep "]	[unkwn \n]	[sep "]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[op -]	[unkwn \n]	[sep "]	[sep ;]	[par }]	[par }]	[kw int]	[id main]	[par (]	[par )]	[par {]	[kw std]	[op ::]	[id vector]	[op <]	[id BankAccount]	[op >]	[id accounts]	[sep ;]	[kw int]	[id choice]	[sep ,]	[id accountNumber]	[sep ;]	[kw double]	[id amount]	[sep ;]	[kw std]	[op ::]	[kw string]	[id name]	[sep ,]	[id type]	[sep ;]	[id do]	[par {]	[id clearConsole]	[par (]	[par )]	[sep ;]	[id displayMenu]	[par (]	[par )]	[sep ;]	[kw std]	[op ::]	[kw cin]	[op >>]	[id choice]	[sep ;]	[kw std]	[op ::]	[kw cin.ignore]	[par (]	[par )]	[sep ;]	[kw switch]	[par (]	[id choice]	[par )]	[par {]	[kw case]	[num 1]	[op :]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Enter]	[id Account]	[id Number]	[op :]	[sep "]	[sep ;]	[kw std]	[op ::]	[kw cin]	[op >>]	[id accountNumber]	[sep ;]	[kw std]	[op ::]	[kw cin.ignore]	[par (]	[par )]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Enter]	[id Account]	[id Holder]	[sep ']	[id s]	[id Name]	[op :]	[sep "]	[sep ;]	[kw std]	[op ::]	[kw getline]	[par (]	[kw std]	[op ::]	[kw cin]	[sep ,]	[id name]	[par )]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Enter]	[id Account]	[id Type]	[par (]	[unkwn Savings/Checking]	[par )]	[op :]	[sep "]	[sep ;]	[kw std]	[op ::]	[kw getline]	[par (]	[kw std]	[op ::]	[kw cin]	[sep ,]	[id type]	[par )]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Enter]	[id Initial]	[id Balance]	[op :]	[sep "]	[sep ;]	[kw std]	[op ::]	[kw cin]	[op >>]	[id amount]	[sep ;]	[unkwn accounts.emplace_back]	[par (]	[id accountNumber]	[sep ,]	[id name]	[sep ,]	[id amount]	[sep ,]	[id type]	[par )]	[sep ;]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Account]	[id created]	[id successfully]	[op !]	[unkwn \n]	[sep "]	[sep ;]	[kw break]	[sep ;]	[kw case]	[num 2]	[op :]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Enter]	[id Account]	[id Number]	[op :]	[sep "]	[sep ;]	[kw std]	[op ::]	[kw cin]	[op >>]	[id accountNumber]	[sep ;]	[par {]	[id BankAccount]	[op *]	[id account]	[op =]	[id findAccount]	[par (]	[id accounts]	[sep ,]	[id accountNumber]	[par )]	[sep ;]	[kw if]	[par (]	[id account]	[par )]	[par {]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Enter]	[id Amount]	[id to]	[id Deposit]	[op :]	[sep "]	[sep ;]	[kw std]	[op ::]	[kw cin]	[op >>]	[id amount]	[sep ;]	[id account]	[op -]	[op >]	[id deposit]	[par (]	[id amount]	[par )]	[sep ;]	[par }]	[kw else]	[par {]	[kw std]	[op ::]	[id cerr]	[op <<]	[sep "]	[id Error]	[op :]	[id Account]	[id not]	[unkwn found.\n]	[sep "]	[sep ;]	[par }]	[par }]	[kw break]	[sep ;]	[kw case]	[num 3]	[op :]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Enter]	[id Account]	[id Number]	[op :]	[sep "]	[sep ;]	[kw std]	[op ::]	[kw cin]	[op >>]	[id accountNumber]	[sep ;]	[par {]	[id BankAccount]	[op *]	[id account]	[op =]	[id findAccount]	[par (]	[id accounts]	[sep ,]	[id accountNumber]	[par )]	[sep ;]	[kw if]	[par (]	[id account]	[par )]	[par {]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Enter]	[id Amount]	[id to]	[id Withdraw]	[op :]	[sep "]	[sep ;]	[kw std]	[op ::]	[kw cin]	[op >>]	[id amount]	[sep ;]	[id account]	[op -]	[op >]	[id withdraw]	[par (]	[id amount]	[par )]	[sep ;]	[par }]	[kw else]	[par {]	[kw std]	[op ::]	[id cerr]	[op <<]	[sep "]	[id Error]	[op :]	[id Account]	[id not]	[unkwn found.\n]	[sep "]	[sep ;]	[par }]	[par }]	[kw break]	[sep ;]	[kw case]	[num 4]	[op :]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Enter]	[id Account]	[id Number]	[op :]	[sep "]	[sep ;]	[kw std]	[op ::]	[kw cin]	[op >>]	[id accountNumber]	[sep ;]	[par {]	[id BankAccount]	[op *]	[id account]	[op =]	[id findAccount]	[par (]	[id accounts]	[sep ,]	[id accountNumber]	[par )]	[sep ;]	[kw if]	[par (]	[id account]	[par )]	[par {]	[id account]	[op -]	[op >]	[id displayAccountDetails]	[par (]	[par )]	[sep ;]	[par }]	[kw else]	[par {]	[kw std]	[op ::]	[id cerr]	[op <<]	[sep "]	[id Error]	[op :]	[id Account]	[id not]	[unkwn found.\n]	[sep "]	[sep ;]	[par }]	[par }]	[kw break]	[sep ;]	[kw case]	[num 5]	[op :]	[id listAllAccounts]	[par (]	[id accounts]	[par )]	[sep ;]	[kw break]	[sep ;]	[kw case]	[num 6]	[op :]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[id Goodbye]	[op !]	[unkwn \n]	[sep "]	[sep ;]	[kw break]	[sep ;]	[id default]	[op :]	[kw std]	[op ::]	[id cerr]	[op <<]	[sep "]	[id Invalid]	[unkwn option.]	[id Try]	[unkwn again.\n]	[sep "]	[sep ;]	[par }]	[kw std]	[op ::]	[id cout]	[op <<]	[sep "]	[unkwn \nPress]	[id Enter]	[id to]	[kw continue...]	[sep "]	[sep ;]	[kw std]	[op ::]	[kw cin.ignore]	[par (]	[kw std]	[op ::]	[kw numeric_limits]	[op <]	[kw std]	[op ::]	[kw streamsize]	[op >]	[op ::]	[kw max]	[par (]	[par )]	[sep ,]	[sep ']	[unkwn \n]	[sep ']	[par )]	[sep ;]	[par }]	[kw while]	[par (]	[id choice]	[op !=]	[num 6]	[par )]	[sep ;]	[kw return]	[num 0]	[sep ;]	[par }]